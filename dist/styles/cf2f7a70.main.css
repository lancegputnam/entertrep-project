@import url(http://weloveiconfonts.com/api/?family=entypo);*{-webkit-font-smoothing:antialiased;color:inherit;text-decoration:none}[class*=entypo-]:before{font-family:entypo,sans-serif}body{background:#FFF;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;color:#624B4A;width:100%;margin:0;padding:0}.topbar{top:0;right:0}.topbar span{font-family:"Code Bold",sans-serif;margin-left:287px;margin-top:10px;font-size:2em;position:absolute}div.menu_wrap>input[type=checkbox]{display:none}div.menu_wrap>label{display:inline-block;font-size:1.2em;padding-top:9px;padding-bottom:1px;cursor:pointer}div.menu_wrap>ul.menu_items{display:none}div.menu_wrap>input[type=checkbox]:checked+ul.menu_items{display:block;position:absolute;margin-left:25px;font-size:18px;margin-top:8px}div.menu_wrap>ul{width:auto;padding:0;list-style-type:none;margin:0}div.menu_wrap>ul>li{font-size:.7em}div.menu_wrap>ul>li:hover{color:#FDC067;cursor:pointer}.entypo-retweet:hover{color:#FDC067}div.menu_wrap{float:left;width:100px;text-align:center;border-radius:5px;padding:4px;margin-top:-47px}div.menu_wrap:last-child{float:right}div.menu_wrap{clear:right}.information{float:left;margin:.25em 0 0 4%;font-family:"Code Bold",sans-serif;font-size:35px;color:#453534}.icons{font-size:25px}.main-image img{width:100%}.feature-links{margin:-42.188em 0 0 70%}.login-button,.signup-button,.signup-button-two{font-family:GeosansLight,sans-serif;font-weight:700;width:11%;border:0;background-color:#F5E2AD;border-radius:2px;height:50px;color:#453534;font-size:1em}.signup-button{margin:-21.75rem 0 0 72%;position:absolute}.login-button:hover,.signup-button-two:hover,.signup-button:hover{background:#FDC067}.login-button{position:absolute;margin-top:-21.75em;margin-left:85%}.signup-button-two{margin:17.5rem 0 0 47%;position:absolute}.description-bar{width:100%;height:400px;margin-top:200px;background-color:#F5E2AD}.container{margin:10em 22% 0;text-align:center}.middle-container{margin:10em 15% 0}.info-one-paragraph,.info-three-paragraph,.social-media-links{font-family:GeosansLight,sans-serif;font-size:1.625em;text-align:left;color:#453534}.first-paragraph{font-family:GeosansLight,sans-serif;font-size:1.625em;color:#453534}.info-one h1,.info-three h1{font-family:"Code Bold",sans-serif;font-size:2.5em;text-align:left}.first-title h1{font-family:"Code Bold",sans-serif;font-size:3em;margin-top:-486px}.second-paragraph{font-family:GeosansLight,sans-serif;font-size:1.625em;color:#453534}.info-two-paragraph{font-family:GeosansLight,sans-serif;font-size:1.625em;text-align:right;color:#453534}.info-two h1{font-family:"Code Bold",sans-serif;font-size:2.5em;text-align:right;color:#453534}.profiles h1{margin-top:6.125em;font-family:"Code Bold",sans-serif;font-size:3em}.indepth-photo img{width:90%}.info-one{margin-top:4.688em}.info-one h1{margin:3.125em 0 0 37%}.info-one-paragraph p{margin-left:37%;display:inline-block;color:#453534}.info-one-paragraph img{margin:-2.75em 0 0 -3%;width:24%;height:12.5em;position:absolute;border-radius:170px}.info-two{margin-top:4.688em}.info-two h1{margin:3.125em 35% 0 0}.info-two-paragraph p{margin-right:35%;color:#453534}.info-two-paragraph img{width:24%;height:12.5em;position:absolute;margin:-3.188em 0 0 -20%;border-radius:170px}.info-three{margin-top:4.688em}.info-three h1{margin:3.125em 0 0 35%}.info-three-paragraph p{margin-left:35%;color:#453534}.info-three-paragraph img{width:24%;height:12.5em;position:absolute;margin:-4.188em 0 0 -5%;border-radius:170px}.middle-image h1{font-family:"Code Bold",sans-serif;font-size:5em;color:#fff;margin:1em 0 0 22%;position:absolute}.middle-image h2{font-family:"Code Bold",sans-serif;font-size:3.4em;color:#fff;margin:3.5em 0 0 5%;position:absolute}.breaker-bar{margin-top:10.25em;width:100%;height:23.75em;background-color:#BEDCC4}.container-two{margin:3.125em 20%}.vendor-profiles{text-align:center;font-family:"Code Bold",sans-serif;margin:20% -5% 5% 349px;font-size:1.563em}.vendor-image p{margin-left:47%;margin-top:-3%;display:inline-block;font-family:GeosansLight,sans-serif;font-size:1.625em;color:#453534}.vendor-image img{width:31%;position:absolute;margin:-.188em 0 0 -3%}.vendor-examples{margin-top:20%;text-align:center;color:#453534}.vendor-examples img{width:75%;margin-top:-4.063em}.features-title h1{text-align:center;margin-top:25%;font-size:3em;font-family:"Code Bold",sans-serif}.features{display:inline-block;margin-left:-15%;font-family:GeosansLight,sans-serif}.features h3{margin-left:0;font-size:2em;font-weight:700;color:#453534}.features li{font-size:1.5em;color:#453534}.features-two{display:inline-block;margin-left:16%;font-family:GeosansLight,sans-serif}.features-two h3{font-size:2em;color:#453534}.features-two li{font-size:1.5em;color:#453534}.features-three{display:inline-block;margin-left:10%;font-family:GeosansLight,sans-serif;position:absolute}.features-three h3{font-size:2em;color:#453534}.features-three li{font-size:1.5em;color:#453534}.back-to-top-button img{width:50px;height:50px;float:right;margin-right:20px;margin-top:100px}.footer{width:100%;height:6.25em;background-color:#9CB8A9;margin-top:14em}.social-media-links{color:#fff;float:left;margin:-.188em 0 0 4%;font-size:1em}.copyright p{font-size:1em;font-family:GeosansLight,sans-serif}.footer a{color:#fff}.whole-page{background-color:#BEDCC4;width:100%;height:2000px;top:0;position:fixed}.user-selector-button,.vendor-selector-button{font-family:GeosansLight,sans-serif;margin-top:30px;width:15%;border:0;padding:4px;background-color:#F5E2AD;border-radius:2px;height:50px;color:#453534;font-weight:400;font-size:1.5em;display:block;text-decoration:none}.signup-buttons{margin-left:100px;margin-top:80px}.signup-container{width:840px;margin:-130px 325px;color:#2B547E;font:1em Helvetica}.sign-info{float:left;background-color:#fff;width:480px;height:465px;border-radius:0 5px 5px 0;padding-top:24px;padding-right:20px}.sign-info h1{font-family:"Code Bold",sans-serif;color:#2B547E;font-weight:900;font-size:2.5em}.sign-info p{font-family:GeosansLight,sans-serif;color:#453534;font-size:1.2em;margin:-25px 0 20px 0}.signup{float:left;width:300px;padding:30px 20px;background-color:#fff;text-align:center}.signup input{font-family:GeosansLight,sans-serif;display:block;margin:0 auto;width:80%;border:0;border-bottom:2px solid rgba(0,0,0,.2);height:45px;line-height:45px;margin-bottom:10px;font-size:1em;font-weight:700;color:#624B4A}.register-button{font-family:GeosansLight,sans-serif;margin-top:27px;width:30%;border:0;background-color:#F5E2AD;border-radius:2px;height:50px;color:#453534;font-weight:400;font-size:1em;margin-left:105px}.clear-button{font-family:GeosansLight,sans-serif;margin-top:-50px;width:7%;border:0;background-color:#F5E2AD;border-radius:2px;height:50px;color:#453534;font-weight:400;font-size:1em;display:block;text-decoration:none;margin-left:55px;position:absolute}button:hover{background:#FDC067}.signup input:focus{outline:0;border-color:#2B547E}.wrapper p{margin-top:23px;margin-left:-38px;color:#453534}.wrapper span2{font-family:GeosansLight,sans-serif;color:#453534}.selectors{margin-bottom:40px}.selectors span3{display:block;font-family:GeosansLight,sans-serif;margin-top:50px;color:#453534}.categories p2{font-family:GeosansLight,sans-serif;color:#453534}.account-button button{margin-left:480px}.topbar{width:100%;height:3.125em;background-color:#9CB8A9}.topbar a{color:#453534}.topbar a:hover{color:#FDC067}.icons{float:right;margin:.488em 2% 0 0;word-spacing:1.25em}.left{float:left}.rounded{border-radius:1px}.search{width:220px;position:relative;top:7px;padding:8px 5px 8px 30px;border:1px solid #ccc;margin-left:42px;background:#fff url(http://i.imgur.com/lFkqn.png) left center no-repeat}.go-left-button{position:relative;top:7;padding:8px 5px;margin-left:-71px;border:none;background-color:#453534;margin-top:9px;cursor:pointer;cursor:hand}.go-left-button spansearch{display:block;width:61px;height:15px;color:#fff}.left-container{float:left;width:47%}.right-container{float:right;width:44%}.profile-photo img{width:300px;height:300px;margin-top:70px;margin-left:250px}.user-info spaninfo{display:block;font-family:GeosansLight,sans-serif;margin:10px;margin-left:210px;font-size:18px;font-weight:700}.userbar{width:550px;height:25px;background-color:#9CB8A9;margin-top:-15px;margin-left:-140px}.right-container h1{margin-top:65px;margin-left:-140px;font-family:GeosansLight,sans-serif}.right-container h2{margin-top:-20px;margin-left:-140px;margin-bottom:25px;font-family:GeosansLight,sans-serif}.userbar li{display:inline;margin:90px;font-size:20px;font-family:GeosansLight,sans-serif;margin-left:-27px;font-weight:700}.userbar li :hover{color:#362a29}.images-idea-pad{margin-top:30px;margin-left:-137px;word-spacing:43px;font-family:GeosansLight,sans-serif}.images-idea-pad img{width:150px;height:150px}.images-inspiration-pad{margin-top:50px;margin-left:-137px;word-spacing:43px;font-family:GeosansLight,sans-serif}.images-inspiration-pad img{width:150px;height:150px}.images-note-pad{margin-top:50px;margin-left:-137px;word-spacing:43px;font-family:GeosansLight,sans-serif}.friends-group{margin-left:250px;margin-top:50px;font-family:GeosansLight,sans-serif}.friends-group:hover{color:#2B547E}.business-group{margin-left:250px;margin-top:50px;font-family:GeosansLight,sans-serif}.business-group:hover{color:#2B547E}.userfooter{width:100%;height:6.25em;background-color:#9CB8A9;margin-top:82em}.copyright p{float:right;color:#fff;margin:4.375em 6% 0 0}.about-me-section{margin-left:-137px;width:550px;margin-top:50px}#login{width:400px;margin:0 auto;margin-top:8px;margin-bottom:2%;transition:opacity 1s;-webkit-transition:opacity 1s}#login h1{background:#F5E2AD;padding:20px 0;text-align:center;color:#453534;font-family:"Code Bold",sans-serif;font-weight:lighter}.enter-password[type=password],.enter-username[type=username]{width:92%;background:#fff;margin-bottom:4%;border:1px solid #ccc;padding:4%;font-family:GeosansLight,sans-serif;font-size:95%;color:#555}.signup-login-button[type=submit],.submit-button[type=submit]{width:100%;background:#F5E2AD;border:0;padding:4%;font-family:GeosansLight,sans-serif;font-size:24px;color:#453534;cursor:pointer;transition:background .3s;-webkit-transition:background .3s}.signup-login-button[type=submit]:hover,.submit-button[type=submit]:hover{background:#FDC067}.plans{width:1036px;margin:50px auto;overflow:hidden}.plan{float:left;width:188px;margin:20px 2px;padding:15px 25px;text-align:center;background:#fff;background-clip:padding-box;border:2px solid #e5ded6;border-color:rgba(0,0,0,.1);border-radius:5px}.plan-title{margin-bottom:12px;font-size:24px;color:#453534}.plan-rec-title{margin-bottom:12px;font-size:24px;color:#453534;margin-top:35px}.plan-bus-title{margin-bottom:12px;font-size:24px;color:#453534;margin-top:26px}.plan-price{margin-bottom:20px;line-height:1;font-size:28px;font-weight:700;color:#FDC067}.plan-bus-price{margin-bottom:20px;line-height:1;font-size:28px;font-weight:700;color:#FDC067;margin-top:0}.plan-unit{display:block;margin-top:5px;font-size:13px;font-weight:400;color:#736F6E}.plan-features{width:120px;margin:20px auto 15px;padding:15px 0 0 15px;border-top:1px solid #e5ded6;text-align:left}.plan-feature{line-height:20px;font-size:13px;font-weight:500;color:#453534}.plan-feature+.plan-feature{margin-top:5px}.plan-feature-unit{margin-left:2px;font-size:12px}.plan-feature-name{font-size:13px;font-weight:400;color:#736F6E}.plan-button,.planner-button,.plans-button{position:relative;display:block;line-height:40px;font-size:16px;color:#453534;text-align:center;text-decoration:none;text-shadow:0 1px rgba(0,0,0,.1);background:#FDC067;border-color:rgba(0,0,0,.15);border-radius:2px;font-family:GeosansLight,sans-serif}.plan-button:active,.planner-button:active,.plans-button:active{top:2px;margin-bottom:2px;border-bottom:0}.planner-button{margin-top:62px}.plans-button{margin-top:39px}.plan-highlight{margin-top:0;margin-bottom:0;padding-left:15px;padding-right:15px;width:250px;border:4px solid #FDC067}.plan-highlight .plan-button{font-size:18px;line-height:49px;background:#FDC067;border-color:#FDC067;border-color:rgba(0,0,0,.15);margin-top:40px}.plan-recommended{width:160px;margin:-15px auto 15px;padding-bottom:2px;line-height:22px;font-size:14px;font-weight:700;color:#fff;text-shadow:0 1px rgba(0,0,0,.05);background:#FDC067;border-radius:0 0 4px 4px}.add-profile-photo{margin-left:455px;text-decoration:none;font-size:12px}.modal-overlay{position:fixed;font-family:GeosansLight,sans-serif;top:0;right:0;bottom:0;left:0;background:rgba(21,23,38,.8);opacity:0;transition:opacity 400ms ease-in;pointer-events:none}.modal-overlay:target{opacity:1;pointer-events:auto}.modal-overlay>div{width:475px;position:relative;margin:10% auto;padding:50px 30px;border-radius:4px;background:#fff;border:4px solid #2B547E}.close{background:#2B547E;color:#FFF;line-height:25px;position:absolute;right:-12px;text-align:center;top:-10px;width:24px;text-decoration:none;font-weight:700;border-radius:12px}.save-button{margin-left:3px;display:block}.topbar-settings{width:100%;height:3.125em;background-color:#9CB8A9;margin-bottom:100px}.topbar-settings a{color:#453534}.topbar-settings a:hover{color:#2B547E}.create-button{font-family:GeosansLight,sans-serif;margin-top:27px;width:37%;border:0;background-color:#F5E2AD;border-radius:2px;height:50px;color:#453534;font-weight:400;font-size:1em}.footer-settings{width:100%;height:6.25em;background-color:#9CB8A9;margin-top:25em;position:absolute}.social-media-links-settings{font-family:GeosansLight,sans-serif;color:#fff;float:left;margin:-.188em 0 0 4%;font-size:1em}.copyright-settings p{float:right;color:#fff;margin:4.375em 6% 0 0;font-size:1em;font-family:GeosansLight,sans-serif}.footer-settings a{color:#fff}.profiles-settings h1{margin-top:.125em;font-family:"Code Bold",sans-serif;font-size:3em;color:#624B4A;position:absolute;margin-left:50.5%;width:460px}.profiles-settings h2{margin-top:50px;font-family:GeosansLight,sans-serif;color:#FDC067;font-size:1.5em;margin-left:49%;position:absolute;width:500px}.indepth-photo-settings img{margin-left:1.5%;height:450px;margin-top:125px}.signup-container-settings{width:915px;margin:25px auto;color:#2B547E;font:1em Helvetica}textarea{margin-left:7px;margin-top:125px}.add-photo-section{position:absolute;margin-left:19%;margin-top:397px}.add-photo-section h2{font-family:GeosansLight,sans-serif;color:#A9A8A6;font-size:17px}.upload-button{margin-left:-56px}.vendor-profile-image img{margin-left:200px}.footer-vendor{width:100%;height:6.25em;background-color:#9CB8A9;margin-top:15em;position:absolute}.about-vendor{margin-left:-139px;margin-top:83px;width:340px;font-family:GeosansLight,sans-serif;color:#453534;font-size:1.25em}.vendor-userbar{width:930px;height:5px;background-color:#F5E2AD;margin-top:80px;margin-left:221px}.vendor-services{margin-top:100px}.vendor-services spaninfo{margin-left:-138px;margin-top:25px;display:block}.connect-button{font-family:GeosansLight,sans-serif;margin-top:-97px;width:15%;border:0;background-color:#F5E2AD;border-radius:2px;height:40px;color:#453534;font-weight:400;font-size:1.5em;margin-left:465px;position:absolute}.profile-photo spaninfo{margin-left:700px;margin-top:900px;position:absolute;color:#2B547E;font-family:GeosansLight,sans-serif;font-size:2.5em}.vendor-images-pad{margin-top:15px;margin-left:222px;word-spacing:45px}.vendor-images-pad img{width:150px;height:150px}.locate-section img{width:300px;height:300px;border-radius:160px;margin-top:370px;margin-left:-120px}.header-image img{width:100%;height:300px}.header-logo img{width:250px;height:250px;border-radius:200px;margin-top:-140px;margin-left:200px}.vendor-title{margin-left:485px;margin-top:-120px}.vendor-title h1{font-family:"Code Bold",sans-serif;font-size:2.5em;color:#453534}.vendor-title h2{margin-top:-20px;font-family:GeosansLight,sans-serif;color:#453534}.main-box-image img{width:550px;height:325px;margin-top:90px;margin-left:225px}.vendor-info{margin-top:810px;margin-left:0}.vendor-info spaninfo{display:block;font-family:GeosansLight,sans-serif;color:#453534;margin:10px;margin-left:250px;font-size:18px}.vendor-info span{display:block;font-family:GeosansLight,sans-serif;font-weight:700;margin:10px;margin-left:250px;font-size:30px;color:#9CB8A9}.vendor-social-info span{font-family:GeosansLight,sans-serif;font-weight:700;margin:10px;font-size:30px;color:#9CB8A9}.vendor-social-info{margin-left:500px;margin-top:-180px}.vendor-social-info img{width:120px;height:120px;margin-left:40px;margin-top:-9px}.header-title button{margin-top:-47px;margin-left:-632px;width:90px;position:absolute}.left-vendor-container{float:left;width:65%}.right-vendor-container{float:right;width:27%}.vendor-info spantop{font-family:GeosansLight,sans-serif;font-weight:700;margin-left:245px;color:#9CB8A9;font-size:2.5em;margin-top:-95px;position:absolute}/*!
 * Modernizr v2.8.3
 * www.modernizr.com
 *
 * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton
 * Available under the BSD and MIT licenses: www.modernizr.com/license/
 */window.Modernizr=(function(window,document,undefined){var version='2.8.3',Modernizr={}.toString,// Following spec is to expose vendor-specific style properties as:// elem.style.WebkitBorderRadius // and the following would be incorrect:// elem.style.webkitBorderRadius // Webkit ghosts their properties in lowercase but Opera & Moz do not. // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+ // erik.eae.net/archives/2008/03/10/21.48.1/ // More here:github.com/Modernizr/Modernizr/issues/issue/21 omPrefixes='Webkit Moz O ms',// TODO ::make the prefixes more granular // List of property values to set for css tests. See ticket #21 prefixes=' -webkit- -moz- -o- -ms- '.split(' '),cssomPrefixes=omPrefixes.split(' '),domPrefixes=omPrefixes.toLowerCase().split(' '),ns={'svg':'http://www.w3.org/2000/svg'},classes=[],// used in testing loop // Inject element with style element and some CSS rules injectElementWithStyles=function(rule,callback,nodes,testnames),featureName,slice=classes.slice{// IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight,so insert it into body or fakebody. // Opera will act all quirky when injecting elements in documentElement when page is served as xml,needs fakebody too. #270 (body ? div:fakeBody).innerHTML +=style;//Safari 5.13/5.1.4 OSX stops loading if::-webkit-scrollbar is used and scrollbars are visible fakeBody.style.overflow='hidden';:docOverflow=docElement.style.overflow;:docElement.style.overflow='hidden';:docElement.appendChild(fakeBody)}ret=callback(div,rule);// If this is done after page load we don't want to remove the body so check if body exists
      if ( !body ) {
          fakeBody.parentNode.removeChild(fakeBody);
          docElement.style.overflow = docOverflow;
      } else {
          div.parentNode.removeChild(div);
      }

      return !!ret;

    },
    

    
    // adapted from matchMedia polyfill
    // by Scott Jehl and Paul Irish
    // gist.github.com/786768
    testMediaQuery = function( mq ) {

      var matchMedia = window.matchMedia || window.msMatchMedia;
      if ( matchMedia ) {
        return matchMedia(mq) && matchMedia(mq).matches || false;
      }

      var bool;

      injectElementWithStyles('@media ' + mq + '{#' + mod + '{position:absolute}}', function( node ) {
        bool = (window.getComputedStyle ?
                  getComputedStyle(node, null) :
                  node.currentStyle)['position'] == 'absolute';
      });

      return bool;

     },
     


    
    //
    // isEventSupported determines if a given element supports the given event
    // kangax.github.com/iseventsupported/
    //
    // The following results are known incorrects:
    //   Modernizr.hasEvent("webkitTransitionEnd", elem) // false negative
    //   Modernizr.hasEvent("textInput") // in Webkit. github.com/Modernizr/Modernizr/issues/333
    //   ...
    isEventSupported = (function() {

      var TAGNAMES = {
        'select': 'input', 'change': 'input',
        'submit': 'form', 'reset': 'form',
        'error': 'img', 'load': 'img', 'abort': 'img'
      };

      function isEventSupported( eventName, element ) {

        element = element || document.createElement(TAGNAMES[eventName] || 'div');
        eventName = 'on' + eventName;

        // When using `setAttribute`, IE skips "unload", WebKit skips "unload" and "resize", whereas `in` "catches" those
        var isSupported = eventName in element;

        if ( !isSupported ) {
          // If it has no `setAttribute` (i.e. doesn't implement Node interface),try generic element if (!element.setAttribute){element=document.createElement('div')}if (element.setAttribute && element.removeAttribute){:element.setAttribute(eventName,'');:isSupported=is(element[eventName],'function');:// If property was created,"remove it" (by setting value to `undefined`) if (!is(element[eventName],'undefined')){element[eventName]=undefined})(),// TODO::Add flag for hasownprop ? didn't last time

    // hasOwnProperty shim by kangax needed for Safari 2.0 support
    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;

    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {
      hasOwnProp = function (object, property) {
        return _hasOwnProperty.call(object, property);
      };
    }
    else {
      hasOwnProp = function (object, property) { 
        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));
      };
    }

    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js
    // es5.github.com/#x15.3.4.5

    if (!Function.prototype.bind) {
      Function.prototype.bind = function bind(that) {

        var target = this;

        if (typeof target != "function") {
            throw new TypeError();
        }

        var args = slice.call(arguments, 1),
            bound = function () {

            if (this instanceof bound) {

              var F = function(){};
              F.prototype = target.prototype;
              var self = new F();

              var result = target.apply(
                  self,
                  args.concat(slice.call(arguments))
              );
              if (Object(result) === result) {
                  return result;
              }
              return self;

            } else {

              return target.apply(
                  that,
                  args.concat(slice.call(arguments))
              );

            }

        };

        return bound;
      };
    }

    
    function setCss( str ) {
        mStyle.cssText = str;
    }

    
    function setCssAll( str1, str2 ) {
        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));
    }

    
    function is( obj, type ) {
        return typeof obj === type;
    }

    
    function contains( str, substr ) {
        return !!~('' + str).indexOf(substr);
    }

    

    // testProps is a generic CSS / DOM property test.

    // In testing support for a given CSS property, it's legit to test:// `elem.style[styleName]!==undefined` // If the property is supported it will return an empty string,// if unsupported it will return undefined. // We'll take advantage of this quick test and skip setting a style
    // on our modernizr element, but instead just testing undefined vs
    // empty string.

    // Because the testing of the CSS property names (with "-", as
    // opposed to the camelCase DOM properties) is non-portable and
    // non-standard but works in WebKit and IE (but not Gecko or Opera),
    // we explicitly reject properties with dashes so that authors
    // developing in WebKit or IE first don't end up with // browser-specific content by accident. function testProps(props,prefixed){:for (var i in props){var prop=props[i];if (!contains(prop,"-") && mStyle[prop]!==undefined){return prefixed=='pfx' ? prop:true}// TODO ::add testDOMProps function testDOMProps(props,obj,elem){:for (var i in props){var item=obj[props[i]];:if (item!==undefined){// return the property name as a string if (elem===false) return props[i];// let's bind a function
                if (is(item, 'function')){
                  // default to autobind unless override
                  return item.bind(elem || obj);
                }

                // return the unbound function or obj or value
                return item;
            }
        }
        return false;
    }

    
    
    function testPropsAll( prop, prefixed, elem ) {

        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),
            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');

        // did they call .prefixed('boxSizing') or are we just testing a prop?
        if(is(prefixed, "string") || is(prefixed, "undefined")) {
          return testProps(props, prefixed);

        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])
        } else {
          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');
          return testDOMProps(props, prefixed, elem);
        }
    }
    


    

    // The *new* flexbox
    // dev.w3.org/csswg/css3-flexbox

    tests['flexbox'] = function() {
      return testPropsAll('flexWrap');
    };

    // The *old* flexbox
    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/

    tests['flexboxlegacy'] = function() {
        return testPropsAll('boxDirection');
    };

    // On the S60 and BB Storm, getContext exists, but always returns undefined
    // so we actually have to call getContext() to verify
    // github.com/Modernizr/Modernizr/issues/issue/97/

    tests['canvas'] = function() {
        var elem = document.createElement('canvas');
        return !!(elem.getContext && elem.getContext('2d'));
    };

    tests['canvastext'] = function() {
        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));
    };

    // webk.it/70117 is tracking a legit WebGL feature detect proposal

    // We do a soft detect which may false positive in order to avoid
    // an expensive context creation: bugzil.la/732441

    tests['webgl'] = function() {
        return !!window.WebGLRenderingContext;
    };

    

    tests['touch'] = function() {
        var bool;

        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {
          bool = true;
        } else {
          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}'].join(''), function( node ) {
            bool = node.offsetTop === 9;
          });
        }

        return bool;
    };


    // geolocation is often considered a trivial feature detect...
    // Turns out, it's quite tricky to get right:// // Using!!navigator.geolocation does two things we don't want. It:
    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513
    //   2. Disables page caching in WebKit: webk.it/43956
    //
    // Meanwhile, in Firefox < 8, an about:config setting could expose
    // a false positive that would throw an exception: bugzil.la/688158

    tests['geolocation'] = function() {
        return 'geolocation' in navigator;
    };


    tests['postmessage'] = function() {
      return !!window.postMessage;
    };


    // Chrome incognito mode used to throw an exception when using openDatabase
    // It doesn't anymore. tests['websqldatabase']=function(){return!!window.openDatabase};// Vendors had inconsistent prefixing with the experimental Indexed DB:// - Webkit's implementation is accessible through webkitIndexedDB
    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB
    // For speed, we don't test the legacy (and beta-only) indexedDB tests['indexedDB']=function(){return!!testPropsAll("indexedDB",window)};// documentMode logic from YUI to filter out IE8 Compat Mode // which false positives. tests['hashchange']=function(){return isEventSupported('hashchange',window) && (document.documentMode===undefined || document.documentMode>7)}// and in the first release thereafter disappear entirely. tests['history']=function(),;// Per 1.6:// This used to be Modernizr.historymanagement but the longer // name has been deprecated in favor of a shorter and property-matching one. // The old API is still available in 1.6,but as of 2 will throw a warning{return!!(window.history && history.pushState)};tests['draganddrop']=function(){:var div=document.createElement('div');:return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)};// FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10
    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.
    // FF10 still uses prefixes, so check for it until then.
    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/
    tests['websockets'] = function() {
        return 'WebSocket' in window || 'MozWebSocket' in window;
    };


    // css-tricks.com/rgba-browser-support/
    tests['rgba'] = function() {
        // Set an rgba() color and check the returned value

        setCss('background-color:rgba(150,255,150,.5)');

        return contains(mStyle.backgroundColor, 'rgba');
    };

    tests['hsla'] = function() {
        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,
        //   except IE9 who retains it as hsla

        setCss('background-color:hsla(120,40%,100%,.5)');

        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');
    };

    tests['multiplebgs'] = function() {
        // Setting multiple images AND a color on the background shorthand property
        //  and then querying the style.background property value for the number of
        //  occurrences of "url(" is a reliable method for detecting ACTUAL support for this!

        setCss('background:url(https://),url(https://),red url(https://)');

        // If the UA supports multiple backgrounds, there should be three occurrences
        //   of the string "url(" in the return value for elemStyle.background

        return (/(url\s*\(.*?){3}/).test(mStyle.background);
    };



    // this will false positive in Opera Mini
    //   github.com/Modernizr/Modernizr/issues/396

    tests['backgroundsize'] = function() {
        return testPropsAll('backgroundSize');
    };

    tests['borderimage'] = function() {
        return testPropsAll('borderImage');
    };


    // Super comprehensive table about all the unique implementations of
    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance

    tests['borderradius'] = function() {
        return testPropsAll('borderRadius');
    };

    // WebOS unfortunately false positives on this test.
    tests['boxshadow'] = function() {
        return testPropsAll('boxShadow');
    };

    // FF3.0 will false positive on this test
    tests['textshadow'] = function() {
        return document.createElement('div').style.textShadow === '';
    };


    tests['opacity'] = function() {
        // Browsers that actually have CSS Opacity implemented have done so
        //  according to spec, which means their return values are within the
        //  range of [0.0,1.0] - including the leading zero.

        setCssAll('opacity:.55');

        // The non-literal . in this regex is intentional:
        //   German Chrome returns this value as 0,55
        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632
        return (/^0.55$/).test(mStyle.opacity);
    };


    // Note, Android < 4 will pass this test, but can only animate
    //   a single property at a time
    //   goo.gl/v3V4Gp
    tests['cssanimations'] = function() {
        return testPropsAll('animationName');
    };


    tests['csscolumns'] = function() {
        return testPropsAll('columnCount');
    };


    tests['cssgradients'] = function() {
        

        var str1 = 'background-image:',
            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(#fff));',
            str3 = 'linear-gradient(left top,#9f9,#fff);';

        setCss(
             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)
              (str1 + '-webkit- '.split(' ').join(str2 + str1) +
             // standard syntax             // trailing 'background-image:'
              prefixes.join(str3 + str1)).slice(0, -str1.length)
        );

        return contains(mStyle.backgroundImage, 'gradient');
    };


    tests['cssreflections'] = function() {
        return testPropsAll('boxReflect');
    };


    tests['csstransforms'] = function() {
        return !!testPropsAll('transform');
    };


    tests['csstransforms3d'] = function() {

        var ret = !!testPropsAll('perspective');

        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.
        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in
        //   some conditions. As a result, Webkit typically recognizes the syntax but
        //   will sometimes throw a false positive, thus we must do a more thorough check:
        if ( ret && 'webkitPerspective' in docElement.style ) {

          // Webkit allows this media query to succeed only if the feature is enabled.
          // `@media (transform-3d),(-webkit-transform-3d){ ... }`
          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px}}', function( node, rule ) {
          var style = document.getElementById('smodernizr'),
              sheet = style.sheet || style.styleSheet,
              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';

          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;
        });

        return bool;
    };
    

    // CSS generated content detection
    tests['generatedcontent'] = function() {
        var bool;

        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:"',smile,'";visibility:hidden;font:3px/1 a}"no" was a return value instead of empty string. // It was live in FF3.5 and 3.5.1,'].join(''), function( node ) {
          bool = node.offsetHeight >= 3;
        });

        return bool;
    };



    // These tests evaluate support of the video/audio elements, as well as
    // testing what types of content they support.
    //
    // We're using the Boolean constructor here,but fixed in 3.5.2 // It was also live in Safari 4.0 - 4.4,but fixed in 4.5 tests['video']=function(),so that we can extend the value // e.g. Modernizr.video // true // Modernizr.video.ogg // 'probably' // // Codec values from :github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845 // thx to NielsLeenheer and zcorpan // Note:in some older browsers{:var elem=document.createElement('video'),bool=false;:// IE9 Running on Windows Server SKU can cause an exception to be thrown,bug #224 try{if (bool=!!elem.canPlayType){bool=new Boolean(bool);:bool.ogg=elem.canPlayType('video/ogg; codecs="theora"') .replace(/^no$/,'');:// Without QuickTime,this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546 bool.h264=elem.canPlayType('video/mp4; codecs="avc1.42E01E"') .replace(/^no$/,'');:bool.webm=elem.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,'')};tests['audio']=function(){// Mimetypes accepted:// developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements // bit.ly/iphoneoscodecs bool.wav=elem.canPlayType('audio/wav; codecs="1"') .replace(/^no$/,'');:bool.m4a=(elem.canPlayType('audio/x-m4a;') || elem.canPlayType('audio/aac;')) .replace(/^no$/,'')};// In FF4,attempting to use localStorage.setItem // will throw the exception:// QUOTA_EXCEEDED_ERRROR DOM Exception 22. // Peculiarly,getItem and removeItem calls do not throw. // Because we are forced to try/catch this,if disabled,we could not test that directly and need to do a // `('localStorage' in window) && ` test first because otherwise Firefox will // throw bugzil.la/365772 if cookies are disabled // Also in iOS5 Private Browsing mode,we'll go aggressive.

    // Just FWIW: IE8 Compat mode supports these features completely:
    //   www.quirksmode.org/dom/html5.html
    // But IE8 doesn't support either with local files tests['localstorage']=function(),window.localStorage should===null. // Normally{:try{localStorage.setItem(mod,mod);:localStorage.removeItem(mod);:return true};tests['sessionstorage']=function(){:try{sessionStorage.setItem(mod,mod);:sessionStorage.removeItem(mod);:return true};tests['webworkers']=function(){return!!window.Worker};tests['applicationcache']=function(){return!!window.applicationCache};// Thanks to Erik Dahlstrom tests['svg']=function(){return!!document.createElementNS &&!!document.createElementNS(ns.svg,'svg').createSVGRect};// specifically for SVG inline in HTML,not within XHTML // test page:paulirish.com/demo/inline-svg tests['inlinesvg']=function(){:var div=document.createElement('div');:div.innerHTML='<svg/>';:return (div.firstChild && div.firstChild.namespaceURI)==ns.svg};// SVG SMIL animation tests['smil']=function(){return!!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg,'animate')))};// This test is only for clip paths in SVG proper,not clip paths on HTML content // demo:srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg // However read the comments to dig into applying SVG clippaths to HTML content here:// github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491 tests['svgclippaths']=function(){return!!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg,'clipPath')))};// input features and input types go directly onto the ret object,bypassing the tests loop. // Hold this guy to execute in a moment. function webforms(){// Run through HTML5's new input attributes to see if the UA understands any.
        // We're using f which is the <input> element created early on // Mike Taylr has created a comprehensive resource for testing these attributes // when applied to all input types:// miketaylr.com/code/input-type-attr.html // spec:www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary // Only input placeholder is tested while textarea's placeholder is not.
        // Currently Safari 4 and Opera 11 have support only for the input placeholder
        // Both tests are available in feature-detects/forms-placeholder.js
        Modernizr['input'] = (function( props ) {
            for ( var i = 0, len = props.length; i < len; i++ ) {
                attrs[ props[i] ] = !!(props[i] in inputElem);
            }
            if (attrs.list){
              // safari false positive's on datalist:webk.it/74252 // see also github.com/Modernizr/Modernizr/issues/146 attrs.list=!!(document.createElement('datalist') && window.HTMLDataListElement)})('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));// Run through HTML5's new input types to see if the UA understands any.
        //   This is put behind the tests runloop because it doesn't return a // true/false like all the other tests;instead,it returns an object // containing each input type with its corresponding true/false value // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/ Modernizr['inputtypes']=(function(props){for (var i=0,bool,inputElemType,defaultView,len=props.length;i < len;i++){// We first check to see if the type we give it sticks.. // If the type does,we feed it a textual value,which shouldn't be valid.
                // If the value doesn't stick,we know there's input sanitization which infers a custom UI
                if ( bool ) {

                    inputElem.value         = smile;
                    inputElem.style.cssText = 'position:absolute;visibility:hidden;:';

                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {

                      docElement.appendChild(inputElem);
                      defaultView = document.defaultView;

                      // Safari 2-4 allows the smiley as a value, despite making a slider
                      bool =  defaultView.getComputedStyle &&
                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&
                              // Mobile android web browser has false positive, so must
                              // check the height to see if the widget is actually there.
                              (inputElem.offsetHeight !== 0);

                      docElement.removeChild(inputElem);

                    } else if ( /^(search|tel)$/.test(inputElemType) ){
                      // Spec doesn't define any special parsing or detectable UI // behaviors so we pass these through as true // Interestingly,opera fails the earlier test,so it doesn't
                      //  even make it here.

                    } else if ( /^(url|email)$/.test(inputElemType) ) {
                      // Real url and email support comes with prebaked validation.
                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;

                    } else {
                      // If the upgraded input compontent rejects the :) text, we got a winner
                      bool = inputElem.value != smile;
                    }
                }

                inputs[ props[i] ] = !!bool;
            }
            return inputs;
        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));
        
    }
    


    // End of test definitions
    // -----------------------



    // Run through all tests and detect their support in the current UA.
    // todo: hypothetically we could be doing an array of tests and use a basic loop here.
    for ( var feature in tests ) {
        if ( hasOwnProp(tests, feature) ) {
            // run the test, throw the return value into the Modernizr,
            //   then based on that boolean, define an appropriate className
            //   and push it into an array of classes we'll join later. featureName=feature.toLowerCase();:Modernizr[featureName]=tests[feature]();classes.push((Modernizr[featureName] ? '':'no-')+featureName)}}// input tests need to run. Modernizr.input || webforms();Modernizr.addTest=function (feature,test){if (typeof feature=='object'){for (var key in feature){if (hasOwnProp(feature,key)){Modernizr.addTest(key,feature[key])}test=typeof test=='function' ? test():test;if (typeof enableClasses!=="undefined" && enableClasses){docElement.className +=' '+(test ? '':'no-')+feature};// Reset modElem.cssText to nothing to reduce memory footprint. setCss('');modElem=inputElem=null;(function(window,document){:var version='3.7.0';:var options=window.html5 ||{};var supportsUnknownElements;(function(){:try{var a=document.createElement('a');:a.innerHTML='<xyz></xyz>';://if the hidden property is implemented we can assume,that the browser supports basic HTML5 Styles supportsHtml5Styles=('hidden' in a);:supportsUnknownElements=a.childNodes.length==1 || (function(){// assign a false positive if unable to shiv (document.createElement)('a');:var frag=document.createDocumentFragment();:return (typeof frag.cloneNode=='undefined' || typeof frag.createDocumentFragment=='undefined' || typeof frag.createElement=='undefined')}catch(e){:supportsUnknownElements=true}());function addStyleSheet(ownerDocument,cssText){:var p=ownerDocument.createElement('p'),parent=ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;:p.innerHTML='x<style>'+cssText+'</style>';:return parent.insertBefore(p.lastChild,parent.firstChild)}function getElements(){:var elements=html5.elements;return typeof elements=='string' ? elements.split(' '):elements}function getExpandoData(ownerDocument){:var data=expandoData[ownerDocument[expando]];:if (!data){data={}function createElement(nodeName,ownerDocument,data){if (!ownerDocument){ownerDocument=document}if (!data){data=getExpandoData(ownerDocument)}var node;if (data.cache[nodeName]){node=data.cache[nodeName].cloneNode()}else if (saveClones.test(nodeName)){node=(data.cache[nodeName]=data.createElem(nodeName)).cloneNode()}function createDocumentFragment(ownerDocument,data){if (!ownerDocument){ownerDocument=document}data=data || getExpandoData(ownerDocument);var clone=data.frag.cloneNode(),elems=getElements(),i=0,l=elems.length;for(;i<l;i++){clone.createElement(elems[i])}function shivMethods(ownerDocument,data){if (!data.cache){data.cache={}ownerDocument.createElement=function(nodeName){//abort shiv if (!html5.shivMethods){return data.createElem(nodeName)};ownerDocument.createDocumentFragment=Function('h,f','return function(){'+'var n=f.cloneNode(),c=n.createElement;'+'h.shivMethods&&('+// unroll the `createElement` calls getElements().join().replace(/[\w\-]+/g,function(nodeName){:data.createElem(nodeName);:data.frag.createElement(nodeName);:return 'c("'+nodeName+'")'}function shivDocument(ownerDocument){if (!ownerDocument){ownerDocument=document}var data=getExpandoData(ownerDocument);if (html5.shivCSS &&!supportsHtml5Styles &&!data.hasCSS){data.hasCSS=!!addStyleSheet(ownerDocument,// corrects block display not defined in IE6/7/8/9 'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}'+// adds styling not present in IE6/7/8/9 'mark{background:#FF0;color:#000}'+// hides non-rendered elements 'template{display:none}')}if (!supportsUnknownElements){shivMethods(ownerDocument,data)}var html5={'elements':options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video','version':version,'shivCSS':(options.shivCSS!==false),'supportsUnknownElements':supportsUnknownElements,'shivMethods':(options.shivMethods!==false),'type':'default',// shivs the document according to the specified `html5` object options 'shivDocument':shivDocument,//creates a shived element createElement:createElement,//creates a shived documentFragment createDocumentFragment:createDocumentFragment}(this,document));// Assign private properties to the return object with prefix Modernizr._version=version;// expose these for the plugin API. Look in the source for how to join() them against your input Modernizr._prefixes=prefixes;Modernizr._domPrefixes=domPrefixes;Modernizr._cssomPrefixes=cssomPrefixes;// Modernizr.mq tests a given media query,elem) Modernizr.hasEvent=isEventSupported;// Modernizr.testProp() investigates whether a given style property is recognized // Note that the property names must be provided in the camelCase variant. // Modernizr.testProp('pointerEvents') Modernizr.testProp=function(prop),live against the current state of the window // A few important notes:// * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false // * A max-width or orientation query will be evaluated against the current state,which may change later. // * You must specify values. Eg. If you are testing support for the min-width media query use:// Modernizr.mq('(min-width:0)') // usage:// Modernizr.mq('only screen and (max-width:768)') Modernizr.mq=testMediaQuery;// Modernizr.hasEvent() detects support for a given event,with an optional element to test on // Modernizr.hasEvent('gesturestart'{return testProps([prop])}// or any of its vendor-prefixed variants,;// Modernizr.testAllProps() investigates whether a given style property,function(elem,is recognized // Note that the property names must be provided in the camelCase variant. // Modernizr.testAllProps('boxSizing') Modernizr.testAllProps=testPropsAll;// Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards // Modernizr.testStyles('#modernizr { position:absolute }',rule){...}) Modernizr.testStyles=injectElementWithStyles;// Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input // Modernizr.prefixed('boxSizing') // 'MozBoxSizing' // Properties must be passed as dom-style camelcase,function(str,if you need to translate that to hypenated style use:// // str.replace(/([A-Z])/g,m1),rather than `box-sizing` hypentated style. // Return values will also be the camelCase variant{return '-'+m1.toLowerCase()})(this,this.document);